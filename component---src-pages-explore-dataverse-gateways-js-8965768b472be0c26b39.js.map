{"version":3,"file":"component---src-pages-explore-dataverse-gateways-js-8965768b472be0c26b39.js","mappings":"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","sources":["webpack://okp4-website/./src/components/Layout.js","webpack://okp4-website/./src/components/animations/Parallax.js","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://okp4-website/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://okp4-website/./src/components/pages/explore/DataverseGateways.js","webpack://okp4-website/./src/pages/explore/dataverse-gateways.js"],"sourcesContent":["import React from \"react\";\nimport Preloader from \"./Preloader\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport \"../assets/styles/index.scss\";\n\nconst Layout = ({\n  children,\n  location,\n  files,\n  breadcrumbs,\n  isStatic = false,\n  withDocs = true,\n  withAssociates = true,\n  withPartners = true,\n}) => {\n  return (\n    <>\n      <Preloader />\n      <Header isPositionFixed={isStatic} breadcrumbs={breadcrumbs} />\n      <main className={location}>{children}</main>\n      <Footer\n        files={files}\n        withDocs={withDocs}\n        withAssociates={withAssociates}\n        withPartners={withPartners}\n      />\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect, useRef } from \"react\";\nimport * as ScrollManager from \"../../utils/ScrollManager.js\";\nimport * as ResponsiveManager from \"../../utils/ResponsiveManager.js\";\n\nconst Parallax = ({\n  children,\n  classContainer,\n  parallaxStart,\n  parallaxEnd,\n  parallaxMiddle,\n  size = \"md\",\n}) => {\n  const divRef = useRef(null);\n\n  const setInitialPosition = () => {\n    if (divRef.current) {\n      var transformRatioCss = \"translate3d(0, \" + parallaxStart + \"px, 0)\";\n      divRef.current.style.transform = transformRatioCss;\n    }\n  };\n\n  const handleParallax = () => {\n    if (divRef.current) {\n      if (ScrollManager.isIntersectingViewport(divRef.current)) {\n        var ratio = ScrollManager.getIntersectionRatio(divRef.current);\n        var new_ratio;\n        var transformRatio;\n\n        if (ratio > 0.3334) {\n          new_ratio = (ratio - 0.3334) * (3 / 2);\n          transformRatio = new_ratio.toFixed(4) * parallaxEnd;\n        }\n\n        if (ratio < 0.3334) {\n          new_ratio = 1 - ratio * 3;\n          if (new_ratio === 0.9999) new_ratio = 1;\n          transformRatio = new_ratio.toFixed(4) * parallaxStart;\n        }\n\n        var transformRatioCss = \"translate3d(0, \" + transformRatio + \"px, 0)\";\n        divRef.current.style.transform = transformRatioCss;\n      }\n      divRef.current.rafId = requestAnimationFrame(handleParallax);\n    }\n  };\n\n  useEffect(() => {\n    if (ResponsiveManager.isWindowLarger(size)) {\n      setTimeout(function () {\n        if (divRef.current) {\n          divRef.current.rafId = 0;\n          setInitialPosition();\n          divRef.current.rafId = requestAnimationFrame(handleParallax);\n\n          return () => {\n            cancelAnimationFrame(divRef.current.rafId);\n          };\n        }\n      }, 1000);\n    }\n  });\n\n  return (\n    <div ref={divRef} className={classContainer}>\n      {children}\n    </div>\n  );\n};\n\nexport default Parallax;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.1.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import * as React from \"react\";\nimport { useRef, useMemo } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport * as MediaManager from \"../../../utils/MediaManager.js\";\nimport Halo from \"../../animations/Halo.js\";\nimport content from \"/content/pages/explore/dataverse-gateways.yaml\";\nimport Parallax from \"../../animations/Parallax.js\";\nimport { useBreakpoint } from \"../../../hook/useBreakpoint\";\n\nconst parallaxLandscapeCard = [100, 150, 50, 125];\n\nconst DataverseGateways = ({ files }) => {\n  const ref = useRef(null);\n  const landscapeRef = useRef(null);\n  const firstPageRef = useRef(null);\n  const protocolRef = useRef(null);\n  const keywordsContainerRef = useRef(null);\n  const cardRefs = useRef([]);\n\n  React.useEffect(() => {\n    if (protocolRef) {\n      const containerScrollWidth = protocolRef.current.scrollWidth;\n      console.log(protocolRef.current);\n      protocolRef.current.scrollLeft =\n        (containerScrollWidth - protocolRef.current.clientWidth) / 2;\n    }\n  }, [protocolRef]);\n\n  return (\n    <div className=\"dataverse_gateways\" ref={ref}>\n      <Halo />\n      <div className=\"wrapper\">\n        <div className=\"dg__first_page\" ref={firstPageRef}>\n          <h1 className=\"dg__main_title\">{content.title}</h1>\n          <p className=\"introduction\">{content.featured.introduction}</p>\n          <div className=\"keywords--container\" ref={keywordsContainerRef}>\n            <div className=\"halo\" />\n            <div className=\"keywords\">\n              <div className=\"keyword share\">Share & Contribute</div>\n              <div className=\"keyword benefit\">Benefit & earn</div>\n              <div className=\"keyword interact\">Interact</div>\n              <div className=\"keyword build\">Build</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dg__landscape\">\n          <h2>{content.landscape.title}</h2>\n          <p className=\"dg__landscape__introduction\">\n            {content.landscape.introduction}\n          </p>\n\n          <div className=\"dg__landscape__cards\" ref={landscapeRef}>\n            {content.landscape.cards.map((card, index) => (\n              <Parallax\n                key={index}\n                classContainer=\"dg__landscape__cards__item\"\n                parallaxStart={parallaxLandscapeCard[index]}\n                parallaxEnd={-parallaxLandscapeCard[index]}\n                parallaxMiddle=\"0.5\"\n                size=\"xxl\"\n              >\n                <div className=\"dg__landscape__cards__item__image\">\n                  <GatsbyImage\n                    image={MediaManager.GetImage(\n                      \"explore/\" + card.image,\n                      files\n                    )}\n                    alt={card.title}\n                  />\n                </div>\n                <div className=\"dg__landscape__cards__item__text\">\n                  <p className=\"title\">{card.title}</p>\n                  <p className=\"text\">{card.text}</p>\n                </div>\n              </Parallax>\n            ))}\n          </div>\n\n          <div className=\"dg__protocol\">\n            <div className=\"dg__protocol__book--container\">\n              <div className=\"dg__protocol__book\">\n                <div className=\"dg__protocol__book--element\">\n                  <StaticImage\n                    className=\"imgWrapper\"\n                    imgClassName=\"img\"\n                    objectFit=\"contain\"\n                    src=\"../../../assets/images/illus/explore/protocol-book.png\"\n                    alt=\"OKP4 Protocol\"\n                  />\n                </div>\n                <div className=\"dg__protocol__book--element page page1\">\n                  <StaticImage\n                    className=\"imgWrapper\"\n                    imgClassName=\"img\"\n                    objectFit=\"contain\"\n                    src=\"../../../assets/images/illus/explore/protocol-page-lb.png\"\n                    alt=\"OKP4 Protocol\"\n                  />\n                </div>\n                <div className=\"dg__protocol__book--element page page2\">\n                  <StaticImage\n                    className=\"imgWrapper\"\n                    imgClassName=\"img\"\n                    objectFit=\"contain\"\n                    src=\"../../../assets/images/illus/explore/protocol-page-lt.png\"\n                    alt=\"OKP4 Protocol\"\n                  />\n                </div>\n                <div className=\"dg__protocol__book--element page page3\">\n                  <StaticImage\n                    className=\"imgWrapper\"\n                    imgClassName=\"img\"\n                    objectFit=\"contain\"\n                    src=\"../../../assets/images/illus/explore/protocol-page-rb.png\"\n                    alt=\"OKP4 Protocol\"\n                  />\n                </div>\n                <div className=\"dg__protocol__book--element page page4\">\n                  <StaticImage\n                    className=\"imgWrapper\"\n                    imgClassName=\"img\"\n                    objectFit=\"contain\"\n                    src=\"../../../assets/images/illus/explore/protocol-page-rt.png\"\n                    alt=\"OKP4 Protocol\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"dg__protocol__cards--container\" ref={protocolRef}>\n              <div className=\"dg__protocol__cards\">\n                {content.protocol.cards.map((card, index) => (\n                  <motion.div\n                    key={index}\n                    whileHover={{ scale: 1.7, zIndex: 100 }}\n                    transition={{ duration: 0.2 }}\n                    style={{ height: \"fit-content\" }}\n                  >\n                    <div\n                      key={index}\n                      className={`dg__protocol__card offset-${index}`}\n                      ref={cardRefs[index]}\n                    >\n                      <GatsbyImage\n                        image={MediaManager.GetImage(\"explore/\" + card, files)}\n                        alt={card}\n                      />\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataverseGateways;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport DataverseGateways from \"../../components/pages/explore/DataverseGateways\";\nimport content from \"/content/pages/explore/dataverse-gateways.yaml\";\n\nexport default function ExploreDataverseGateways({ data }) {\n  return (\n    <Layout\n      location={\"dataverseGateways\"}\n      files={data}\n      breadcrumbs={content.breadcrumbs}\n      isStatic\n      withDocs={false}\n      withPartners={false}\n      withAssociates={false}\n    >\n      <DataverseGateways files={data} />\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query FilesQuery {\n    allImages: allFile(filter: { extension: { nin: [\"mp4\", \"ogg\", \"webm\"] } }) {\n      edges {\n        node {\n          id\n          relativePath\n          publicURL\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\n\n// TODO : SEO\n"],"names":["_ref","children","location","files","breadcrumbs","isStatic","withDocs","withAssociates","withPartners","React","Preloader","Header","isPositionFixed","className","Footer","classContainer","parallaxStart","parallaxEnd","parallaxMiddle","size","divRef","useRef","handleParallax","current","ScrollManager","new_ratio","transformRatio","ratio","toFixed","transformRatioCss","style","transform","rafId","requestAnimationFrame","useEffect","ResponsiveManager","setTimeout","setInitialPosition","cancelAnimationFrame","ref","MotionConfigContext","createContext","transformPagePoint","p","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","viewportFallback","onViewportEnter","startObserver","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","parallaxLandscapeCard","landscapeRef","firstPageRef","protocolRef","keywordsContainerRef","cardRefs","containerScrollWidth","scrollWidth","console","log","clientWidth","Halo","content","card","Parallax","GatsbyImage","image","MediaManager","alt","title","text","StaticImage","imgClassName","objectFit","src","__imageData","div","ExploreDataverseGateways","Layout","DataverseGateways"],"sourceRoot":""}